#!/usr/bin/env node
// Generated by CoffeeScript 1.6.1
var argv, fs, http, importer, input_file, output_file, path, pkg, server, usage, _ref;

importer = require('./importer');

http = require('http');

fs = require('fs');

path = require('path');

usage = 'Usage: $0 input_file [output_file] [options]\n    \nIf called with no options, input_file will be compiled and executed.';

argv = require('optimist').usage(usage).demand(1).alias('p', 'port').describe('p', 'Port to start server on').alias('f', 'frameworks').describe('f', 'Path to frameworks directory')["default"]('f', './frameworks').alias('m', 'minify').describe('m', 'Minifies the output JavaScript').boolean('m').alias('s', 'source-map').describe('s', 'Whether to output a source map').boolean('s').argv;

_ref = argv._, input_file = _ref[0], output_file = _ref[1];

pkg = importer.createPackage(input_file, {
  frameworkPath: argv.frameworks,
  minify: argv.minify,
  sourceMap: argv['source-map']
});

if (output_file) {
  if (argv['source-map']) {
    pkg.sourceMap = "" + output_file + ".map";
  }
  pkg.build(function(err, built) {
    if (err) {
      throw err;
    }
    fs.writeFile(output_file, built.code);
    if (built.map) {
      return fs.writeFile(pkg.sourceMap, built.map);
    }
  });
} else if (argv.port) {
  if (argv['source-map']) {
    pkg.sourceMap = "" + (path.basename(input_file)) + ".map";
  }
  server = http.createServer(function(req, res) {
    res.writeHead(200);
    return pkg.build(function(err, built) {
      if (err) {
        return res.end('throw "' + err.message.replace(/"/g, "\\\"") + '"');
      } else if (req.url === ("/" + pkg.sourceMap)) {
        return res.end(built.map);
      } else {
        return res.end(built.code);
      }
    });
  });
  server.listen(argv.port);
  console.log('Server listening at port ' + argv.port);
} else {
  pkg.require();
}
