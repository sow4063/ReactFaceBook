// Generated by CoffeeScript 1.6.1
var IMPORT_RE, Package, path;

path = require('path');

IMPORT_RE = /(?:#|\/\/)import (".+"|<.+>);?$/gm;

exports.IMPORT_RE = IMPORT_RE;

exports.extensions = {
  '.coffee': function(code, sourceMap) {
    var ret;
    code = code.replace(IMPORT_RE, '`//import $1`');
    ret = require('coffee-script').compile(code, {
      bare: true,
      sourceMap: sourceMap,
      filename: 'item'
    });
    if (typeof ret !== 'string') {
      return {
        code: ret.js,
        map: JSON.parse(ret.v3SourceMap)
      };
    }
    return ret;
  },
  '.js': function(code) {
    return code;
  }
};

Package = require('./package');

exports.createPackage = function(main, options) {
  return new Package(main, options);
};

exports.require = function(main, options) {
  var pkg;
  if (options == null) {
    options = {};
  }
  pkg = new Package(main, options);
  return pkg.require();
};

exports.middleware = function(main, options) {
  var pkg, _ref;
  if (options == null) {
    options = {};
  }
  if ((_ref = options.url) == null) {
    options.url = "/" + (path.basename(main, path.extname(main))) + ".js";
  }
  if (options.sourceMap !== false) {
    options.sourceMap = "" + options.url + ".map";
  }
  pkg = new Package(main, options);
  return function(req, res, next) {
    var _ref1;
    if ((_ref1 = req.url) !== options.url && _ref1 !== options.sourceMap) {
      return next();
    }
    return pkg.build(function(err, built) {
      res.type('.js');
      if (err) {
        return res.end('throw "' + err.message.replace(/"/g, "\\\"") + '"');
      } else if (req.url === options.sourceMap) {
        return res.end(built.map);
      } else {
        return res.end(built.code);
      }
    });
  };
};
