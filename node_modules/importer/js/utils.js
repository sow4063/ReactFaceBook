// Generated by CoffeeScript 1.6.1
var async, fakeNextTick, fs, key, nextTick, setupAsync, setupFs,
  __slice = [].slice;

async = require('async');

fs = require('fs');

setupFs = function(key) {
  if (fs[key + 'Sync'] == null) {
    return;
  }
  return exports[key] = function() {
    var args, callback, ret, suffix, sync, _i;
    sync = arguments[0], args = 3 <= arguments.length ? __slice.call(arguments, 1, _i = arguments.length - 1) : (_i = 1, []), callback = arguments[_i++];
    if (sync) {
      suffix = sync ? 'Sync' : '';
      try {
        ret = fs[key + suffix].apply(fs, args);
      } catch (err) {
        return callback(err);
      }
      return callback(null, ret);
    } else {
      return fs[key].apply(fs, __slice.call(args).concat([callback]));
    }
  };
};

for (key in fs) {
  setupFs(key);
}

nextTick = async.nextTick;

fakeNextTick = function(fn) {
  return fn();
};

setupAsync = function(key, errs, arrKey) {
  if (arrKey == null) {
    arrKey = key;
  }
  return exports[key] = function() {
    var args, sync;
    sync = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
    if (sync) {
      async.nextTick = fakeNextTick;
    }
    async[key].apply(async, args);
    return async.nextTick = nextTick;
  };
};

for (key in async) {
  setupAsync(key);
}
